---

- name: Install dependencies
  hosts: k3s
  become: yes
  gather_facts: yes
  tasks:
    - name: Ping host
      ansible.builtin.ping:
    - name: Update cache and install dependencies
      ansible.builtin.apt:
        update_cache: yes
        name:
          - curl
          - apt-transport-https
          - ca-certificates
          - gpg
          - net-tools
        state: present
    - name: Add net-tools path (/sbin) to system-wide $PATH.
      ansible.builtin.copy:
        dest: /etc/profile.d/custom-path.sh
        content: 'PATH=$PATH:/sbin/'
        mode: "0644"
    - name: Add Kubernetes APT repository signing key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
        state: present
    - name: Install kubectl
      ansible.builtin.apt:
        update_cache: yes
        name:
          - kubectl
        state: present

- name: Install k3s bootstrap server
  hosts: k3s_server
  become: yes
  vars:
    server_ip: "{{ hostvars[k3s_server]['ansible_eth1']['ipv4'].address }}"
  tasks:
    - name: Ping host
      ansible.builtin.ping:
    - name: Install k3s bootstrap server
      environment:
        K3S_NODE_NAME: "{{ inventory_hostname }}"
        K3S_KUBECONFIG_MODE: "644"
      shell: curl -sfL https://get.k3s.io | sh -s - server --cluster-init --flannel-iface eth1 --bind-address {{ server_ip }}
    - name: Extract K3S_TOKEN from server output
      command: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
    - name: Extract kubeconfig
      slurp:
        path: /etc/rancher/k3s/k3s.yaml
      register: kubeconfig
    - name: Set K3S_TOKEN and kubeconfig as facts
      set_fact:
        k3s_token: "{{ k3s_token.stdout }}"
        kubeconfig: "{{ kubeconfig['content'] | b64decode | from_yaml }}"

- name: Install k3s worker
  become: yes
  hosts: k3s_agent
  vars:
    k3s_token: "{{ hostvars[k3s_server]['k3s_token'] }}"
    server_ip: "{{ hostvars[k3s_server]['ansible_eth1']['ipv4'].address }}"
    node_ip: "{{ hostvars[k3s_agent]['ansible_eth1']['ipv4'].address }}"
  tasks:
    - name: Ping hosts
      ansible.builtin.ping:
    - name: Install k3s agent
      environment:
        K3S_NODE_NAME: "{{ inventory_hostname }}"
        K3S_URL: "https://{{ server_ip }}:6443"
        K3S_TOKEN: "{{ k3s_token }}" 
      shell: curl -sfL https://get.k3s.io | sh -s - --flannel-iface eth1
          
- name: Fetch kubeconfig
  hosts: k3s
  vars:
    server_ip: "{{ hostvars[k3s_server]['ansible_eth1']['ipv4'].address }}"
    kubeconfig: "{{ hostvars[k3s_server]['kubeconfig'] }}"
  tasks:
    - name: Ping hosts
      ansible.builtin.ping:
    - name: Create .kube directory
      ansible.builtin.file:
        path: $HOME/.kube
        state: directory
        mode: '0755'
    - name: Copy kubeconfig to node
      ansible.builtin.copy:
        content: "{{ kubeconfig | to_nice_yaml }}"
        dest: $HOME/.kube/config
    - name: Fetch kubeconfig to host
      become: yes
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        flat: yes
      when: ansible_hostname == k3s_server

